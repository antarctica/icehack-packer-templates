{
  "variables": {
    "distro": "ubuntu-14.04-amd64",

    "hostname": "cloud",

    "artefact": "antarctica-icehack",
    "release_version": "0.0.0",
    "atlas_artifact": "antarctica/icehack"
  },
  "builders": [
    {
      "type": "digitalocean",
      "image": "16035420",
      "region": "lon1",
      "size": "1gb",
      "droplet_name": "{{user `hostname`}}",
      "private_networking": true,
      "snapshot_name": "{{user `atlas_artifact`}}-{{user `release_version`}}"
    },
    {
      "type": "amazon-ebs",
      "communicator": "ssh",
      "ssh_pty": true,
      "source_ami": "ami-c7229db4",
      "region": "eu-west-1",
      "instance_type": "t2.micro",
      "ssh_username": "ubuntu",
      "ami_groups": [
        "all"
      ],
      "ami_name": "{{user `atlas_artifact`}}-{{user `release_version`}}"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "execute_command": "echo 'vagrant'|{{.Vars}} sudo -S -E bash '{{.Path}}'",
      "scripts": [
        "provisioning/scripts/icehack/users.sh"
      ]
    },
    {
      "type": "shell",
      "execute_command": "echo 'vagrant'|{{.Vars}} sudo -S -E -H -u user bash '{{.Path}}'",
      "scripts": [
        "provisioning/scripts/icehack/miniconda-download.sh"
      ]
    },
    {
      "type": "shell",
      "execute_command": "echo 'vagrant'|{{.Vars}} sudo -S -E -H -u user bash '{{.Path}}'",
      "inline": [
        "cd /home/user",
        "./miniconda.sh -b -p /home/user/miniconda",
        "rm /home/user/miniconda.sh",
        "echo 'PATH=/home/user/miniconda/bin:$PATH' >> /home/user/.bashrc"
      ]
    },
    {
      "type": "shell",
      "execute_command": "echo 'vagrant'|{{.Vars}} sudo -S -E -H -u user bash '{{.Path}}'",
      "scripts": [
        "provisioning/scripts/icehack/miniconda-configure-update.sh"
      ]
    },
    {
      "type": "shell",
      "execute_command": "echo 'vagrant'|{{.Vars}} sudo -S -E bash '{{.Path}}'",
      "environment_vars": [
        "TEMPLATE_NAME={{user `atlas_artifact`}}",
        "TEMPLATE_NAME_ALT={{user `artefact`}}",
        "TEMPLATE_VERSION={{user `release_version`}}"
      ],
      "scripts": [
        "provisioning/scripts/common/metadata.sh",
        "provisioning/scripts/ubuntu/cleanup.sh"
      ]
    }
  ],
  "post-processors": [
  ]
}
